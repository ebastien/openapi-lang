---
openapi: 3.0.3
info:
  title: Example
  description: Example
  license:
    name: Apache 2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
  version: 1.0.0
servers:
  - url: /
paths:
  "/some/path/{id}/template":
    get:
      tags:
        - blah
      summary: does something else
      operationId: get-some-path-id-template
      parameters:
        - in: query
          name: q
          schema:
            type: string
          style: form
      responses:
        default:
          description: some content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/obj1"
    put:
      summary: does something
      operationId: put-some-path-id-template
      parameters:
        - in: query
          name: n
          schema:
            type: number
            minimum: 0.0
            maximum: 99.99
          style: form
      requestBody:
        description: some content
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/obj1"
      responses:
        default:
          description: some content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/obj1"
    patch:
      summary: does something
      operationId: patch-some-path-id-template
      parameters:
        - in: query
          name: n
          schema:
            type: number
            minimum: 0.0
            maximum: 99.99
          style: form
      requestBody:
        description: some content
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/obj1"
      responses:
        default:
          description: some content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/obj1"
    parameters:
      - in: path
        name: id
        description: some parameter
        required: true
        schema:
          title: some identifier
          type: number
        style: simple
  /something:
    get:
      summary: get-something
      operationId: get-something
      parameters:
        - in: header
          name: If-None-Match
          description: makes the request conditional
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: all good
          headers:
            ETag:
              description: identifier for a specific version of a resource
              style: simple
              schema:
                type: string
          content:
            application/vnd.blah+json:
              schema:
                $ref: "#/components/schemas/obj3"
        5XX:
          description: internal error
          content:
            application/problem+json:
              schema:
                type: object
        4XX:
          description: bad request
          content:
            application/problem+json:
              schema:
                type: object
        "204":
          description: no content
    parameters:
      - in: query
        name: q
        schema:
          type: string
        style: form
components:
  schemas:
    obj3:
      description: some other stuff
      allOf:
        - $ref: "#/components/schemas/obj2"
        - oneOf:
            - type: object
              properties:
                height:
                  type: number
            - type: object
              properties:
                stuff:
                  anyOf:
                    - oneOf:
                        - title: some identifier
                          type: number
                        - type: string
                    - $ref: "#/components/schemas/obj2"
                    - example: "/some/path/{id}/template"
                      type: string
                      format: uri-reference
